---
- name: Pull down exomeslicer
  git:
    repo: "{{ git_repo }}"
    dest: "{{ project_home }}"
    version: "{{ code_version }}"
    accept_hostkey: true
    force: yes

- name: Install ExomeSlicer requirements
  pip:
    requirements: "{{ project_home }}/requirements/production.txt"
    virtualenv: "{{ project_venv }}"
    virtualenv_python: python3.6
    state: forcereinstall

- name: Install JS depedencies
  command: "yarn install"
  args:
    chdir: "{{ project_home }}/frontend"
  environment:
    - NODE_PATH: src/
    - REACT_APP_SENTRY_URL: "{{ sentry_dsn }}"
    - REACT_APP_HOST_URL: "{{ ansible_hostname }}"

- name: Front-end build
  command: "yarn build"
  args:
    chdir: "{{ project_home }}/frontend"
  environment:
    - NODE_PATH: src/
    - REACT_APP_SENTRY_URL: "{{ sentry_dsn }}"
    - REACT_APP_HOST_URL: "{{ ansible_hostname }}"

- name: Generate static files
  command: "{{ project_venv }}/bin/python manage.py collectstatic --no-input"
  args:
    chdir: "{{ project_home }}"
  environment:
    - DJANGO_SETTINGS_MODULE: "{{ django_settings }}"
    - DJANGO_SECRET_KEY: "{{ secret_key }}"
    - MAILGUN_SENDER_DOMAIN: "{{ server_email }}"
    - DJANGO_MAILGUN_API_KEY: "{{ mailgun_api_key }}"
    - DATABASE_URL: "{{ db_url }}"
    - DJANGO_ADMIN_URL: "{{ admin_url }}"
  become: true

- name: Migrate database
  command: "{{ project_venv }}/bin/python manage.py migrate"
  args:
    chdir: "{{ project_home }}"
  environment:
    - DJANGO_SETTINGS_MODULE: "{{ django_settings }}"
    - DJANGO_SECRET_KEY: "{{ secret_key }}"
    - MAILGUN_SENDER_DOMAIN: "{{ server_email }}"
    - DJANGO_MAILGUN_API_KEY: "{{ mailgun_api_key }}"
    - DATABASE_URL: "{{ db_url }}"
    - DJANGO_ADMIN_URL: "{{ admin_url }}"
  become: true

- name: Change ownership of ExomeSlicer project
  file: path={{ project_home }} owner={{ svc_user }} group={{ svc_group }} state=directory recurse=yes mode=0777
  become: true

- name: Open ports for ExomeSlicer
  firewalld: port={{ item }}/tcp permanent=true state=enabled
  with_items:
    - 8000
  become: true

- name: restart firewall
  service: name=firewalld state=restarted enabled=yes
  become: true
